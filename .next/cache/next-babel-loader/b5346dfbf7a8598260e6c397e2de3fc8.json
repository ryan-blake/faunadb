{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst faunadb = require('faunadb'); // your secret hash\n\n\nconst secret = process.env.FAUNADB_SECRET_KEY;\nconst q = faunadb.query;\nconst client = new faunadb.Client({\n  secret\n});\n\nmodule.exports = async (req, res) => {\n  try {\n    const dbs = await client.query(q.Map( // iterate each item in result\n    q.Paginate( // make paginatable\n    q.Match( // query index\n    q.Index('all_customers') // specify source\n    )), ref => q.Get(ref) // lookup each result by its reference\n    )); // ok\n\n    res.status(200).json(dbs.data);\n  } catch (e) {\n    // something went wrong\n    res.status(500).json({\n      error: e.message\n    });\n  }\n};\n\nconst editNote = (noteId, newData) => client.query(q.Update(q.Ref(q.Collection('notes'), noteId), {\n  data: {\n    firstName: newData.split(\" \")[0],\n    lastName: newData.split(\" \")[1]\n  }\n})).then(ret => console.log(ret)).catch(err => console.warn(err));\n\nvar _default = editNote;\nexports.default = _default;","map":{"version":3,"sources":["/Users/ryanzillhuw/Desktop/faunadb-demo/pages/api/index.js"],"names":["faunadb","require","secret","process","env","FAUNADB_SECRET_KEY","q","query","client","Client","module","exports","req","res","dbs","Map","Paginate","Match","Index","ref","Get","status","json","data","e","error","message","editNote","noteId","newData","Update","Ref","Collection","firstName","split","lastName","then","ret","console","log","catch","err","warn"],"mappings":";;;;;;;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAEA;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA3B;AACA,MAAMC,CAAC,GAAGN,OAAO,CAACO,KAAlB;AACA,MAAMC,MAAM,GAAG,IAAIR,OAAO,CAACS,MAAZ,CAAmB;AAAEP,EAAAA;AAAF,CAAnB,CAAf;;AAEAQ,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,MAAM,CAACD,KAAP,CAChBD,CAAC,CAACS,GAAF,EACE;AACAT,IAAAA,CAAC,CAACU,QAAF,EACE;AACAV,IAAAA,CAAC,CAACW,KAAF,EACE;AACAX,IAAAA,CAAC,CAACY,KAAF,CAAQ,eAAR,CAFF,CAE2B;AAF3B,KAFF,CAFF,EASEC,GAAG,IAAIb,CAAC,CAACc,GAAF,CAAMD,GAAN,CATT,CASoB;AATpB,KADgB,CAAlB,CADE,CAcF;;AACAN,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,GAAG,CAACS,IAAzB;AACD,GAhBD,CAgBE,OAAOC,CAAP,EAAU;AACV;AACAX,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA,KAAK,EAAED,CAAC,CAACE;AAAX,KAArB;AACD;AACF,CArBD;;AAuBA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqBrB,MAAM,CAACD,KAAP,CACpCD,CAAC,CAACwB,MAAF,CACExB,CAAC,CAACyB,GAAF,CAAMzB,CAAC,CAAC0B,UAAF,CAAa,OAAb,CAAN,EAA6BJ,MAA7B,CADF,EAEE;AAAEL,EAAAA,IAAI,EAAE;AAAEU,IAAAA,SAAS,EAAEJ,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAb;AAAoCC,IAAAA,QAAQ,EAAEN,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmB,CAAnB;AAA9C;AAAR,CAFF,CADoC,EAMrCE,IANqC,CAM/BC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANuB,EAOrCG,KAPqC,CAO/BC,GAAG,IAAIH,OAAO,CAACI,IAAR,CAAaD,GAAb,CAPwB,CAAtC;;eASed,Q","sourcesContent":["const faunadb = require('faunadb')\n\n// your secret hash\nconst secret = process.env.FAUNADB_SECRET_KEY\nconst q = faunadb.query\nconst client = new faunadb.Client({ secret })\n\nmodule.exports = async (req, res) => {\n  try {\n    const dbs = await client.query(\n      q.Map(\n        // iterate each item in result\n        q.Paginate(\n          // make paginatable\n          q.Match(\n            // query index\n            q.Index('all_customers') // specify source\n          )\n        ),\n        ref => q.Get(ref) // lookup each result by its reference\n      )\n    )\n    // ok\n    res.status(200).json(dbs.data)\n  } catch (e) {\n    // something went wrong\n    res.status(500).json({ error: e.message })\n  }\n}\n\nconst editNote = (noteId, newData) => client.query(\n  q.Update(\n    q.Ref(q.Collection('notes'), noteId),\n    { data: { firstName: newData.split(\" \")[0], lastName: newData.split(\" \")[1] } },\n  )\n)\n.then((ret) => console.log(ret))\n.catch(err => console.warn(err))\n\nexport default editNote\n"]},"metadata":{},"sourceType":"script"}