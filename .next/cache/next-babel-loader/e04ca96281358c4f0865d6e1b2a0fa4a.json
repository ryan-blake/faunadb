{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ryanzillhuw/Desktop/faunadb-demo/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport TableRow from '../components/TableRow';\nexport default _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, newData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                newData = _context.sent;\n                setData(newData);\n                console.log(JSON.stringify(newData));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Next.js, FaunaDB and NodeJS\")), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Next.js, FaunaDB and Node.js\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"container-scroll\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Customer Data\"), __jsx(\"div\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"name\"), __jsx(\"h4\", {\n    className: \"telephone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"telephone\"), __jsx(\"h4\", {\n    className: \"credit-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"credit card\")), data.length > 0 ? data.map(function (d) {\n    return __jsx(TableRow, {\n      key: d.data.telephone,\n      creditCard: d.data.creditCard.number,\n      firstName: d.data.firstName,\n      lastName: d.data.lastName,\n      telephone: d.data.telephone,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    });\n  }) : __jsx(React.Fragment, null, __jsx(TableRow, {\n    loading: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), __jsx(TableRow, {\n    loading: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), __jsx(TableRow, {\n    loading: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })))));\n}, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"sources":["/Users/ryanzillhuw/Desktop/faunadb-demo/pages/index.js"],"names":["useEffect","useState","Head","TableRow","data","setData","getData","fetch","res","json","newData","console","log","JSON","stringify","length","map","d","telephone","creditCard","number","firstName","lastName"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,kBAAe,YAAM;AAAA;;AAAA,kBACKF,QAAQ,CAAC,EAAD,CADb;AAAA,MACZG,IADY;AAAA,MACNC,OADM;;AAEnBL,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCM,OADD;AAAA;AAAA;;AAAA;AAAA,0EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBC,KAAK,CAAC,MAAD,CADzB;;AAAA;AACQC,gBAAAA,GADR;AAAA;AAAA,uBAEwBA,GAAG,CAACC,IAAJ,EAFxB;;AAAA;AAEQC,gBAAAA,OAFR;AAGEL,gBAAAA,OAAO,CAACK,OAAD,CAAP;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAOdJ,IAAAA,OAAO;AACR,GARQ,EAQN,EARM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAFF,EAOGF,IAAI,CAACW,MAAL,GAAc,CAAd,GACCX,IAAI,CAACY,GAAL,CAAS,UAAAC,CAAC;AAAA,WACR,MAAC,QAAD;AACE,MAAA,GAAG,EAAEA,CAAC,CAACb,IAAF,CAAOc,SADd;AAEE,MAAA,UAAU,EAAED,CAAC,CAACb,IAAF,CAAOe,UAAP,CAAkBC,MAFhC;AAGE,MAAA,SAAS,EAAEH,CAAC,CAACb,IAAF,CAAOiB,SAHpB;AAIE,MAAA,QAAQ,EAAEJ,CAAC,CAACb,IAAF,CAAOkB,QAJnB;AAKE,MAAA,SAAS,EAAEL,CAAC,CAACb,IAAF,CAAOc,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAAV,CADD,GAWC,4BACE,MAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAlBJ,CADF,CANF,CADF;AAoCD,CA/CD","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport TableRow from '../components/TableRow'\n\nexport default () => {\n  const [data, setData] = useState([])\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch('/api')\n      const newData = await res.json()\n      setData(newData)\n      console.log(JSON.stringify(newData))\n    }\n    getData()\n  }, [])\n  return (\n    <main>\n      <Head>\n        <title>Next.js, FaunaDB and NodeJS</title>\n      </Head>\n      <h1>Next.js, FaunaDB and Node.js</h1>\n      <hr />\n      <div className=\"container-scroll\">\n        <div className=\"container\">\n          <h2>Customer Data</h2>\n          <div className=\"table\">\n            <h4>name</h4>\n            <h4 className=\"telephone\">telephone</h4>\n            <h4 className=\"credit-card\">credit card</h4>\n          </div>\n          {data.length > 0 ? (\n            data.map(d => (\n              <TableRow\n                key={d.data.telephone}\n                creditCard={d.data.creditCard.number}\n                firstName={d.data.firstName}\n                lastName={d.data.lastName}\n                telephone={d.data.telephone}\n              />\n            ))\n          ) : (\n            <>\n              <TableRow loading />\n              <TableRow loading />\n              <TableRow loading />\n            </>\n          )}\n        </div>\n      </div>\n    </main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}